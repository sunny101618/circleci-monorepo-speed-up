version: 2.1

orbs:
 web_app:
  aliases:
   - &restore_yarn_cache
     restore_cache:
      keys:
       - v1-yarn-{{ checksum "yarn.lock" }}
       - v1-yarn-
   - &save_yarn_cache
     save_cache:
      key: v1-yarn-{{ checksum "yarn.lock" }}
      paths:
       - ../.cache/yarn
       - ./node_modules
       - ./packages/*/node_modules
   - &run_yarn
     run:
      name: Install Dependencies
      command: yarn --frozen-locakfile
   - &persist_workspace
     persist_to_workspace:
      root: ~/repo
      paths: ./*
   - &attach_repo_workspace
     attach_workspace: { at: ~/repo }

  executors:
   node_executor:
    docker:
     - image: circleci/node:latest-browsers
    working_directory: ~/repo

  commands:
   determine_workflow:
    steps:
     - run:
        name: Determine Workflows
        command: chmod +x .circleci/circle_trigger.sh && .circleci/circle_trigger.sh
  jobs:
   test:
    parameters:
     web_app_name:
      description: "Name of the Web App"
      type: string
     pretest:
      description: "Steps that will be executed after dependencies are installed, but before the test begins"
      type: steps
      default: []
     posttest:
      description: "Steps that will be executed after successful test"
      type: steps
      default: []
    executor: node_executor
    steps:
     - checkout
     - *restore_yarn_cache
     - *run_yarn
     - steps: << parameters.pretest >>
     - run:
        name: Build << parameters.web_app_name >>
        command: |
         yarn build:lib
         yarn workspace @sunny/<< parameters.web_app_name >> test
     - steps: << parameters.posttest >>
   build:
    parameters:
     web_app_name:
      description: "Name of the Web App"
      type: string
     prebuild:
      description: "Steps that will be executed after dependencies are installed, but before the build begins"
      type: steps
      default: []
     postbuild:
      description: "Steps that will be executed after successful build"
      type: steps
      default: []
    executor: node_executor
    steps:
     - checkout
     - *restore_yarn_cache
     - *run_yarn
     - steps: << parameters.prebuild >>
     - run:
        name: Build << parameters.web_app_name >>
        command: |
          yarn build:lib
          yarn workspace @sunny/<< parameters.web_app_name >> build
     - steps: << parameters.postbuild >>
     - *persist_workspace
   deploy:
    parameters:
     web_app_name:
      description: "Name of the Web App"
      type: string
     predeploy:
      description: "Steps that will be executed after dependencies are installed, but before the deploy begins"
      type: steps
      default: []
     postdeploy:
      description: "Steps that will be executed after successful deploy"
      type: steps
      default: []
    executor: node_executor
    steps:
     - *attach_repo_workspace
     - steps: << parameters.predeploy >>
     - run:
        name: Build << parameters.web_app_name >>
        command: echo "Deploying << parameters.web_app_name >> ..."
     - steps: << parameters.postdeploy >>

workflows:
 version: 2
 app:
  jobs:
   - web_app/test:
      name: test_app
      web_app_name: app
   - web_app/build:
      name: build_app
      web_app_name: app
   - web_app/deploy:
      name: deploy_app
      web_app_name: app
      requires: [build_app]

 app2:
  jobs:
   # Always
   - web_app/test:
      name: test_app2
      web_app_name: app2
   - web_app/build:
      name: build_app2
      web_app_name: app2
   - web_app/deploy:
      name: deploy_app2
      web_app_name: app2
      requires: [build_app2]

 app3:
  jobs:
   # Always
   - web_app/test:
      name: test_app3
      web_app_name: app3
   - web_app/build:
      name: build_app3
      web_app_name: app3
   - web_app/deploy:
      name: deploy_app3
      web_app_name: app3
      requires: [build_app3]
